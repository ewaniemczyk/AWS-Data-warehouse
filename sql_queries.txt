import configparser


# CONFIG
config = configparser.ConfigParser()
config.read('dwh.cfg')
log_data=config.get("S3","log_data")
log_jsonpath=config.get("S3","log_jsonpath")
song_data=config.get("S3","song_data")
arn=config.get("IAM","ARN")

# DROP TABLES

staging_events_table_drop = "DROP TABLE IF EXISTS staging_events"
staging_songs_table_drop = "DROP TABLE IF EXISTS staging_songs"
songplay_table_drop = "DROP TABLE IF EXISTS songplay"
user_table_drop = "DROP TABLE IF EXISTS users"
song_table_drop = "DROP TABLE IF EXISTS song"
artist_table_drop = "DROP TABLE IF EXISTS artist"
time_table_drop = "DROP TABLE IF EXISTS time"

# CREATE TABLES

staging_events_table_create= ("""
                                CREATE TABLE IF NOT EXISTS staging_events
                                (artist VARCHAR
                                ,auth VARCHAR
                                ,firstname VARCHAR
                                ,gender VARCHAR
                                ,iteminsession INT
                                ,lastname VARCHAR
                                ,length NUMERIC
                                ,level VARCHAR
                                ,location VARCHAR
                                ,method VARCHAR
                                ,page VARCHAR
                                ,registration NUMERIC
                                ,sessionid INT
                                ,song VARCHAR
                                ,status VARCHAR
                                ,ts BIGINT
                                ,useragent VARCHAR
                                ,userid INT
                                );
                                """)


staging_songs_table_create = ("""
                                CREATE TABLE IF NOT EXISTS staging_songs
                                (num_songs INT NOT NULL
                                ,artist_id VARCHAR
                                ,artist_latitude INT
                                ,artist_longitude INT
                                ,artist_location VARCHAR
                                ,artist_name VARCHAR
                                ,song_id VARCHAR
                                ,title VARCHAR
                                ,duration NUMERIC
                                ,year INT
                                );
                                """)

songplay_table_create = ("""
                        CREATE TABLE IF NOT EXISTS songplays 
                            (
                            songplay_id INT NOT NULL
                            , start_time TIMESTAMP NOT NULL 
                            , user_id INT NOT NULL 
                            , level VARCHAR NOT NULL
                            , song_id VARCHAR NOT NULL 
                            , artist_id VARCHAR NOT NULL
                            , session_id INT NOT NULL
                            , location VARCHAR
                            , user_agent VARCHAR
                            );
                        """)

user_table_create = ("""
                    CREATE TABLE IF NOT EXISTS users 
                        (user_id VARCHAR  NOT NULL 
                        , first_name VARCHAR NOT NULL
                        , last_name VARCHAR NOT NULL
                        , gender VARCHAR 
                        , level VARCHAR)
                    ;
                    """)

song_table_create = ("""
                    CREATE TABLE IF NOT EXISTS songs
                        (song_id VARCHAR NOT NULL 
                        , title VARCHAR NOT NULL
                        , artist_id VARCHAR NOT NULL
                        , year INT
                        , duration NUMERIC );
                    """)


artist_table_create = ("""
                    CREATE TABLE IF NOT EXISTS artists
                        (artist_id VARCHAR NOT NULL 
                        , name VARCHAR NOT NULL
                        , location VARCHAR
                        , latitude  VARCHAR
                        , longitude VARCHAR)
                    ;
                    """)

time_table_create = ("""
                    CREATE TABLE IF NOT EXISTS time 
                        (start_time  TIMESTAMP  NOT NULL 
                        , hour INT NOT NULL
                        , day INT NOT NULL
                        , week INT NOT NULL
                        , month INT NOT NULL
                        , year INT NOT NULL
                        , weekday INT NOT NULL)
                    ;
                    """)

# STAGING TABLES

staging_events_copy=("""
                        COPY staging_events 
                        FROM 'log_data'
                        CREDENTIALS 'arn'
                        FORMAT AS json 'auto'
                        ;
                        """).format(log_data, arn, log_jsonpath)


staging_songs_copy = ("""
                        COPY staging_songs 
                        FROM 'song_data'
                        CREDENTIALS 'arn'
                        FORMAT AS json 'auto'
                        ;
                    """).format()

# FINAL TABLES

songplay_table_insert = ("""
                        INSERT INTO songplays 
                            ( 
                            IDENTITY(0,1) 
                            , start_time
                            , user_id
                            , level
                            , song_id
                            , artist_id
                            , session_id
                            , location
                            , user_agent)
                        VALUES 
                            (%s, %s, %s, %s, %s, %s, %s, %s, %s) 
                        ON CONFLICT (songplay_id) DO NOTHING 
                        """)

user_table_insert = ("""
                    INSERT INTO users 
                        (user_id
                        , first_name
                        , last_name
                        , gender
                        , level  )
                    VALUES 
                        (%s, %s, %s, %s, %s) 
                    ON CONFLICT (user_id) DO UPDATE
                        SET level=EXCLUDED.level
                    """)

song_table_insert = ("""
                    INSERT INTO songs
                        (song_id
                        , title
                        , artist_id
                        , year
                        , duration)
                    VALUES 
                        (%s, %s, %s, %s, %s) 
                    ON CONFLICT (song_id) DO NOTHING
                    """)

artist_table_insert = ("""
                        INSERT INTO artists
                        (artist_id
                        , name
                        , location
                        , latitude
                        , longitude)
                    VALUES 
                        (%s, %s, %s, %s, %s) 
                    ON CONFLICT (artist_id) DO NOTHING
                        """)

time_table_insert = ("""
                    INSERT INTO time 
                        (start_time
                        , hour
                        , day
                        , week
                        , month
                        , year
                        , weekday)
                    VALUES 
                        (%s, %s, %s, %s, %s, %s, %s) 
                    ON CONFLICT (start_time) DO NOTHING
                    """)

# QUERY LISTS

create_table_queries = [staging_events_table_create
                        , staging_songs_table_create
                        , songplay_table_create
                        , user_table_create
                        , song_table_create
                        , artist_table_create
                        , time_table_create]

drop_table_queries = [staging_events_table_drop
                      , staging_songs_table_drop
                      , songplay_table_drop
                      , user_table_drop
                      , song_table_drop
                      , artist_table_drop
                      , time_table_drop]

copy_table_queries = [staging_events_copy
                      , staging_songs_copy]

insert_table_queries = [songplay_table_insert
                        , user_table_insert
                        , song_table_insert
                        , artist_table_insert
                        , time_table_insert]